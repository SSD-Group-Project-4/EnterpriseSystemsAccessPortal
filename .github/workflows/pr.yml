# Simple workflow for PRs in GitHub
name: GitHub Actions PR Workflow

on:
  # Runs on pull requests to main branch
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Add additional jobs here!!

  html-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install html-validate
        run: npm install -g html-validate
      - name: Run HTML validation
        run: |
          html-validate "**/*.html"
        continue-on-error: true

  stylelint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Stylelint
        uses: actions-hub/stylelint@master
        env:
          PATTERN: "**/*.css"  # Define the pattern for stylelint to look for CSS files
        continue-on-error: true

  broken-link-check:
    runs-on: ubuntu-latest
    needs: html-validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material

      - name: Run MkDocs server
        run: mkdocs serve -a 0.0.0.0:4444 &
        continue-on-error: true

      - name: Wait for server to start
        run: sleep 10

      - name: Run Link Checker
        uses: merlos/broken-links@0.2.2
        with:
          url: 'https://ssd-group-project-4.github.io/EnterpriseSystemsAccessPortal/index.html'
          only-errors: 'true'
          ignore-file: './check-ignore'
        continue-on-error: true

  minify-html-css-js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: HTML/CSS/JS Minifier
        uses: docker://devatherock/minify-js:3.1.0
        with:
          directory: '.'      
          output: '.'   
          add_suffix: false    
          inclusions: |-       
            .*css/.*\.css       
            .*js/.*\.js         
            .*\.html            
          exclusions: |-       
              .*playbooks/.*      
              .*icons/.* 
        # Log the minified file sizes
      - name: Show File Sizes after Minification
        run: |
          echo "File sizes of CSS files:"
          du -h css/ || echo "No CSS files found"
          echo "File sizes of JS files:"
          du -h js/ || echo "No JS files found"
          echo "File sizes of HTML files:"
          du -h *.html || echo "No HTML files found"
        continue-on-error: true  


  workflow-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Perform CodeQL Analysis
        uses: rcowsill/workflow-scan-action@v3 
        continue-on-error: true

  #Implementing Optimize images using Sharp Add lazy loading to images Set up performance monitoring with Lighthouse
  image-optimization:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
      
      - name: Install Image Optimization Tools
        run: |
          npm install -g sharp imagemin imagemin-jpegtran imagemin-pngquant
      
      - name: Run Image Optimization
        run: |
          find . -type f \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" \) -exec sh -c '
            sharp --input "$1" --quality 85 --output "${1%.*}_optimized.${1##*.}"
          ' sh {} \;
        continue-on-error: true

  lazy-loading-implementation:
    runs-on: ubuntu-latest
    needs: image-optimization
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Add Lazy Loading
        run: |
          find . -type f -name "*.html" -exec sed -i 's/<img/<img loading="lazy"/g' {} +
        continue-on-error: true

  performance-monitoring:
    runs-on: ubuntu-latest
    needs: lazy-loading-implementation
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Lighthouse
        run: npm install -g lighthouse
      
      - name: Run Performance Tests
        run: |
          lighthouse https://ssd-group-project-4.github.io/EnterpriseSystemsAccessPortal/index.html --output json --output-path ./lighthouse-report.json
        continue-on-error: true
        
  # End additional job steps!!
