# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Add additional jobs here!!
  html-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install html-validate
        run: npm install -g html-validate
      - name: Run HTML validation
        run: |
          html-validate "**/*.html"
        continue-on-error: true

  broken-link-check:
    runs-on: ubuntu-latest
    needs: html-validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material

      - name: Run MkDocs server
        run: mkdocs serve -a 0.0.0.0:4444 &
        continue-on-error: true

      - name: Wait for server to start
        run: sleep 10

      - name: Run Link Checker
        uses: merlos/broken-links@0.2.2
        with:
          url: 'https://ssd-group-project-4.github.io/EnterpriseSystemsAccessPortal/index.html'
          only-errors: 'true'
          ignore-file: './check-ignore'
        continue-on-error: true

  minify-html-css-js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: HTML/CSS/JS Minifier
        uses: docker://devatherock/minify-js:3.1.0
        with:
          directory: '.'      
          output: '.'   
          add_suffix: false    
          inclusions: |-       
            .*css/.*\.css       
            .*js/.*\.js         
            .*\.html            
          exclusions: |-       
              .*playbooks/.*      
              .*icons/.* 
      # Log the minified file sizes
      - name: Show File Sizes of Minified Files
        run: |
          echo "File sizes of CSS files:"
          du -h css/ || echo "No CSS files found"
          echo "File sizes of JS files:"
          du -h js/ || echo "No JS files found"
          echo "File sizes of HTML files:"
          du -h *.html || echo "No HTML files found"
        continue-on-error: true  

  # End additional job steps!!
  # Single deploy job since we're just deploying
  deploy:
    needs: [html-validate, broken-link-check, minify-html-css-js]  # This ensures validation runs before deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Add steps here!!

      # End additional steps!!
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "."
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
